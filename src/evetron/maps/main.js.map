{"version":3,"sources":["main.ts"],"names":[],"mappings":"AAAA,8CAA8C;AAC9C,IAAM,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACrC,sCAAsC;AACtC,IAAM,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC;AACzB,0CAA0C;AAC1C,IAAM,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC;AAE7C,8EAA8E;AAC9E,2EAA2E;AAC3E,IAAI,UAAe,CAAC;AAEpB;IACI,6BAA6B;IAC7B,UAAU,GAAG,IAAI,aAAa,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;IAE5D,sCAAsC;IACtC,UAAU,CAAC,OAAO,CAAC,YAAU,SAAS,eAAY,CAAC,CAAC;IAEpD,qBAAqB;IACrB,wCAAwC;IAExC,qCAAqC;IACrC,UAAU,CAAC,EAAE,CAAC,QAAQ,EAAE;QACpB,iEAAiE;QACjE,mEAAmE;QACnE,oDAAoD;QACpD,UAAU,GAAG,IAAI,CAAC;IACtB,CAAC,CAAC,CAAC;AACP,CAAC;AAED,wDAAwD;AACxD,yDAAyD;AACzD,sDAAsD;AACtD,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;AAE9B,oCAAoC;AACpC,GAAG,CAAC,EAAE,CAAC,mBAAmB,EAAE;IACxB,2DAA2D;IAC3D,8DAA8D;IAC9D,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC;QAChC,GAAG,CAAC,IAAI,EAAE,CAAC;IACf,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,EAAE,CAAC,UAAU,EAAE;IACf,gEAAgE;IAChE,4DAA4D;IAC5D,EAAE,CAAC,CAAC,UAAU,KAAK,IAAI,CAAC,CAAC,CAAC;QACtB,YAAY,EAAE,CAAC;IACnB,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,4EAA4E;AAC5E,uEAAuE","file":"main.js","sourcesContent":["/// <reference path=\"../typings/index.d.ts\" />\r\nconst Electron = require('electron');\r\n// Module to control application life.\r\nconst App = Electron.app;\r\n// Module to create native browser window.\r\nconst BrowserWindow = Electron.BrowserWindow;\r\n\r\n// Keep a global reference of the window object, if you don't, the window will\r\n// be closed automatically when the JavaScript object is garbage collected.\r\nlet MainWindow: any;\r\n\r\nfunction CreateWindow() {\r\n    // Create the browser window.\r\n    MainWindow = new BrowserWindow({ width: 800, height: 600 });\r\n\r\n    // and load the index.html of the app.\r\n    MainWindow.loadURL(`file://${__dirname}/main.html`);\r\n\r\n    // Open the DevTools.\r\n    //MainWindow.webContents.openDevTools();\r\n\r\n    // Emitted when the window is closed.\r\n    MainWindow.on('closed', () => {\r\n        // Dereference the window object, usually you would store windows\r\n        // in an array if your app supports multi windows, this is the time\r\n        // when you should delete the corresponding element.\r\n        MainWindow = null;\r\n    });\r\n}\r\n\r\n// This method will be called when Electron has finished\r\n// initialization and is ready to create browser windows.\r\n// Some APIs can only be used after this event occurs.\r\nApp.on('ready', CreateWindow);\r\n\r\n// Quit when all windows are closed.\r\nApp.on('window-all-closed', () => {\r\n    // On OS X it is common for applications and their menu bar\r\n    // to stay active until the user quits explicitly with Cmd + Q\r\n    if (process.platform !== 'darwin') {\r\n        App.quit();\r\n    }\r\n});\r\n\r\nApp.on('activate', () => {\r\n    // On OS X it's common to re-create a window in the app when the\r\n    // dock icon is clicked and there are no other windows open.\r\n    if (MainWindow === null) {\r\n        CreateWindow();\r\n    }\r\n});\r\n\r\n// In this file you can include the rest of your app's specific main process\r\n// code. You can also put them in separate files and require them here."],"sourceRoot":"/source/"}